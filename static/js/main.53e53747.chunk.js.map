{"version":3,"sources":["components/Header/Header.jsx","components/Filter/Filter.jsx","components/Table/Table.js","utils/API.js","container/App.js","index.js"],"names":["Header","className","Filter","props","placeholder","type","name","value","filter","id","onChange","handleChange","Table","scope","onClick","handleClick","employees","map","emp","i","email","dob","contact","alt","src","url","axios","get","App","data","useState","result","setResult","setFilter","propertyClicked","orderBy","sortField","setSortField","useEffect","API","then","res","console","log","formattedEmpDetails","results","first","last","date","cell","picture","thumbnail","catch","err","alert","event","target","employee","toLowerCase","indexOf","propertyClickedKey","sortedOrder","r","sort","a","b","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.53e53747.chunk.js","sourcesContent":["// Component for Header section\r\nconst Header = () => {\r\n  return (\r\n    <article className=\"mw10 center ph3 ph5-ns tc br2 pv2 bg-dark-gray ba bw2 b--green white mb5\">\r\n      <h1 className=\"fw6 f3 f2-ns lh-title mt0 mb3\">Employee Directory</h1>\r\n      <h6 className=\"white\">Click on column headings to sort or use the search box to narrow your results.</h6>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","// Component for Filter section\r\nconst Filter = (props) => {\r\n  return (\r\n    <div>\r\n      <form className=\"bg-moon-gray mw6 center pa1 br2-ns ba b--green bw3 mb4\">\r\n        <fieldset className=\"cf bn ma0 pa0\">\r\n          <div className=\"cf\">\r\n            <input\r\n              className=\"f6 f5-1 input-reset bn fl black-80 bg-white pa3 lh-solid w-100\"\r\n              placeholder=\"Search...\"\r\n              type=\"text\"\r\n              name=\"employeeName\"\r\n              value={props.filter}\r\n              id=\"employeeName\"\r\n              onChange={props.handleChange}\r\n            />\r\n          </div>\r\n        </fieldset>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default Filter;\r\n","// Component for showing Table section based on result\r\nimport \"./Table.css\";\r\n\r\nconst Table = (props) => {\r\n  return (\r\n    <div className = \"ml4 mr4\" >\r\n      <table className=\"table\">\r\n        <thead className=\"thead-dark\">\r\n          <tr>\r\n          \r\n            <th scope=\"col\" className =\"tableHead\" onClick={()=>{props.handleClick(\"name\")}}>Name </th>\r\n            <th scope=\"col\" className =\"tableHead\"onClick={()=>{props.handleClick(\"email\")}}>Email</th>\r\n            <th scope=\"col\" className =\"tableHead\" onClick={()=>{props.handleClick(\"dob\")}}>Date Of Birth</th>\r\n            <th scope=\"col\" className =\"tableHead\" onClick={()=>{props.handleClick(\"contact\")}}>Contact</th>\r\n            <th scope=\"col\" className =\"tableHead\" >Picture</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.employees.map((emp, i) => {\r\n            return (\r\n              <tr key = {i}>\r\n                <th scope=\"row\">{emp.name}</th>\r\n                <td>{emp.email}</td>\r\n                <td>{emp.dob}</td>\r\n                <td>{emp.contact}</td>\r\n                <td><img alt=\"picture\" src={emp.url}/></td>\r\n\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n    fetchEmployees : function(){\r\n        return axios.get(\"https://randomuser.me/api?results=30\");\r\n    }\r\n}","import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Header from \"../components/Header/Header.jsx\";\nimport Filter from \"../components/Filter/Filter.jsx\";\nimport Table from \"../components/Table/Table\";\nimport API from \"../utils/API\";\n\nfunction App() {\n  // state constant to store results from api-call\n  const [result, setResult] = useState([]);\n  // state constant to store filtered string entered by user\n  const [filter, setFilter] = useState(\"\");\n  // state constant to store the order of the data and property clicked\n  const [sortField, setSortField] = useState({\n    propertyClicked: \"\",\n    orderBy: \"ascending\",\n  });\n\n  // sort result based on property clicked on ascending  and descending order\n  const sortEmployees = (orderBy, propertyClicked) => {\n    if (orderBy === \"ascending\") {\n      setResult(\n        result\n          .map((r) => r)\n          .sort((a, b) => (a[propertyClicked] > b[propertyClicked] ? 1 : -1))\n      );\n    } else if (orderBy === \"descending\") {\n      setResult(\n        result\n          .map((r) => r)\n          .sort((a, b) => (a[propertyClicked] > b[propertyClicked] ? -1 : 1))\n      );\n    }\n  };\n  // function to filter data by name, email , contact & dob.\n  const filterData = (data) => {\n    let resultAfterFilter = data.filter(\n      (employee) =>\n        employee.name.toLowerCase().indexOf(filter) > -1 ||\n        employee.email.toLowerCase().indexOf(filter) > -1 ||\n        employee.dob.toLowerCase().indexOf(filter) > -1 ||\n        employee.contact.toLowerCase().indexOf(filter) > -1\n    );\n    return resultAfterFilter;\n  };\n  // This function is called when user enters something in the search box and \n  //it gets stored to filter state variable\n  const handleChange = (event) => {\n    setFilter(event.target.value);\n    console.log(event.target.value);\n  };\n\n  // This function is called when user click any of the column headings \n  // and on every alternative clicks the data gets sorted in ascending and descending order\n  const handleClick = (propertyClickedKey) => {\n\n    // logic to handle the order. If the order is ascending on next click it is changed to descending. \n    // And the current orderState and property clicked gets stored to sortField variable. \n    let sortedOrder = \"ascending\";\n    if (\n      sortField.propertyClicked === propertyClickedKey &&\n      sortField.orderBy === \"ascending\"\n    ) {\n      sortedOrder = \"descending\";\n    }\n    setSortField({ propertyClicked: propertyClickedKey, orderBy: sortedOrder });\n\n    sortEmployees(sortedOrder, propertyClickedKey);\n  };\n\n  // This hook is invoked when the page is loaded\n  useEffect(() => {\n    // call API and set the result using set result\n    API.fetchEmployees()\n      .then((res) => {\n        console.log(res.data);\n        let formattedEmpDetails = res.data.results.map((emp) => {\n          return {\n            name: `${emp.name.first} ${emp.name.last}`,\n            email: emp.email,\n            dob: emp.dob.date,\n            contact: emp.cell,\n            url: emp.picture.thumbnail,\n          };\n        });\n        setResult(formattedEmpDetails);\n      })\n      .catch((err) => {\n        console.log(err);\n        alert(\"something went wrong..:(\");\n      });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Filter handleChange={handleChange} filter={filter} />\n      <Table employees={filterData(result)} handleClick={handleClick} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./container/App\";\nimport \"tachyons\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}